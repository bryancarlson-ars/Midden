@page "/"
@inject Services.StateContainer State


<Breadcrumb Style="margin:16px 0;">
    <BreadcrumbItem>
        <a href="">
            <Icon Type="home" Theme="fill" />
        </a>
    </BreadcrumbItem>
</Breadcrumb>

<div class="site-layout-background">
    @if (State?.AppConfig != null)
    {
        <PageHeader Class="site-page-header"
                    Title="@State.AppConfig.OrganizationName"
                    Subtitle="Metadata Tool" />
    }

    <Row Gutter="16">
        <AntDesign.Col Span="8">
            <a href="insights">
                <Card Hoverable>
                    <CardMeta Title="Insights" Description="Stats for nerds" />
                </Card>
            </a>
        </AntDesign.Col>
        <AntDesign.Col Span="8">
            <a href="catalog/datasets">
                <Card Hoverable>
                    <CardMeta Title="Dataset Catalog" Description="Find and view datasets" />
                </Card>
            </a>
        </AntDesign.Col>
        <AntDesign.Col Span="8">
            <a href="editor/dataset">
                <Card Hoverable>
                    <CardMeta Title="Dataset Editor" Description="Add dataset" />
                </Card>
            </a>
        </AntDesign.Col>
    </Row>

</div>


@code{
private string DebugMsg { get; set; }

private async Task AppConfig_StateChanged(
ComponentBase source,
string appConfig)
{
if (source != this)
{
await InvokeAsync(StateHasChanged);
DebugMsg = "StateHasChanged";
}
}

protected override void OnInitialized()
{
State.StateChanged += async (source, property)
=> await AppConfig_StateChanged(source, property);
}
public void Dispose()
{
State.StateChanged -= async (source, property)
=> await AppConfig_StateChanged(source, property);
}
}